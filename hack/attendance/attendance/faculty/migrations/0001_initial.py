# Generated by Django 5.2.6 on 2025-09-23 07:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('student', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacultyAttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField(auto_now_add=True)),
                ('attendance_time', models.TimeField(auto_now_add=True)),
                ('total_students', models.IntegerField(default=0)),
                ('present_students', models.IntegerField(default=0)),
                ('absent_students', models.IntegerField(default=0)),
                ('attendance_percentage', models.FloatField(default=0.0)),
                ('qr_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_attendance_records', to='student.group')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_attendance_records', to='student.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_attendance_records', to='student.teacher')),
            ],
            options={
                'ordering': ['-attendance_date', '-attendance_time'],
                'unique_together': {('teacher', 'subject', 'group', 'attendance_date')},
            },
        ),
        migrations.CreateModel(
            name='TeacherNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('attendance_marked', 'Attendance Marked'), ('attendance_updated', 'Attendance Updated'), ('system_alert', 'System Alert')], default='attendance_marked', max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('attendance_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_notifications', to='student.attendancerecord')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_notifications', to='student.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='student.teacher')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FacultyAttendanceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent')], default='present', max_length=20)),
                ('marked_time', models.DateTimeField(auto_now_add=True)),
                ('face_verified', models.BooleanField(default=False)),
                ('qr_data', models.JSONField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_attendance_details', to='student.student')),
                ('faculty_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_details', to='faculty.facultyattendancerecord')),
            ],
            options={
                'ordering': ['-marked_time'],
                'unique_together': {('faculty_record', 'student')},
            },
        ),
    ]
